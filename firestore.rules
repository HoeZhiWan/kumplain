rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Complaints collection
    match /complaints/{complaintId} {
      // Anyone can read complaints
      allow read: if true;
      
      // Only authenticated users can create complaints
      allow create: if isSignedIn();
      
      // Check if the update only affects votes and votedBy fields
      function isVoteOperation() {
        let affectedFields = request.resource.data.diff(resource.data).affectedKeys();
        return affectedFields.hasOnly(['votes', 'votedBy']) && 
               request.resource.data.votes is int &&
               request.resource.data.votedBy is map;
      }
      
      // Check if the update only affects commentCount and updatedAt fields
      function isCommentCountUpdate() {
        let affectedFields = request.resource.data.diff(resource.data).affectedKeys();
        return affectedFields.hasOnly(['commentCount', 'updatedAt']) && 
               request.resource.data.commentCount is int;
      }
      
      // Only the creator or users with vote permission can update
      // or any signed-in user can update comment count
      allow update: if isSignedIn() && (
        resource.data.userId == request.auth.uid || 
        isVoteOperation() ||
        isCommentCountUpdate()
      );
      
      // Only the creator can delete their complaint
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
      
    }
    
    // Top-level comments collection
    match /comments/{commentId} {
      // Anyone can read comments
      allow read: if true;
      
      // Only authenticated users can create comments, regardless of who created the complaint
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      
      // Only the comment author can update or delete
      allow update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Anyone can read complaint tags
    match /library/complaint{
      allow read: if true;
    }
  }
}